# ChatGPT used to guide various parts of docker compose setup
services:
  ourcity.api.prod:
    container_name: ourcity.api.prod
    image: itsmannpatel/ourcity-backend:${TAG}  # Use the pushed backend image tag
    ports:
      - "9000:9000"
    env_file:
      - .env.production
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - ourcity.postgres.prod

  ourcity.postgres.prod:
    container_name: ourcity.postgres.prod
    image: postgres:16.10
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ourcity
    ports:
      - "9100:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  ourcity.migrate.prod:
    container_name: ourcity.migrate.prod
    image: itsmannpatel/ourcity-migrate:${TAG}  # Use the pushed migration image tag
    profiles: [ "migrate" ]
    depends_on:
      ourcity.postgres.prod:
        condition: service_healthy
    environment:
      CONNECTION_STRING: "Host=ourcity.postgres.prod;Port=5432;Username=postgres;Password=postgres;Database=ourcity"
    restart: no

volumes:
  postgres_data: